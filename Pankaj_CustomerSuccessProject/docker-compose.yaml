version: "3.0"
services:
  angularwebapp:
    container_name: angular-web-app-container
    build: ./CustomerSuccessPlatform/
    image: jainilp12/angularwebapp:1.0
    ports:
      - 4200:${ANGULAR_PORT}
      - 80:80
    expose:
      - ${ANGULAR_PORT}
      - 80
    environment:
      SERVICE_NAME: angularwebapp
      API_SERVER_URL: ${API_SERVER_URL}

    networks:
      - internalnet
    depends_on:
      - cspdotnetapi

  cspdotnetapi:
    container_name: dotnet-api-container
    build: ./customer-success-platformServer/
    image: jainilp12/cspdotnetapi:1.0

    ports:
      - 8080:${SERVER_PORT}

    expose:
      - ${SERVER_PORT}
    environment:
      #      AUTH0_SECRET: ${AUTH0_SECRET}
      #      AUTH0_BASE_URL: ${AUTH0_BASE_URL}
      #      AUTH0_ISSUER_BASE_URL: ${AUTH0_ISSUER_BASE_URL}
      #      AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
      #      AUTH0_CLIENT_SECRET: ${AUTH0_CLIENT_SECRET}
      SERVER_PORT: ${SERVER_PORT}
    entrypoint: ["dotnet", "Promact.CustomerSuccess.Platform.dll"]
    networks:
      - internalnet
    depends_on:
      pgdb:
        condition: service_healthy

  pgdb:
    image: postgres
    container_name: postgres-container
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}

    volumes:
      - $HOME/dotnetpostgresdatabase:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
    networks:
      - internalnet

networks:
  internalnet:
    driver: bridge
